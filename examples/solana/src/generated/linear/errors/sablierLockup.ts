/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from '@solana/kit';
import { SABLIER_LOCKUP_PROGRAM_ADDRESS } from '../programs';

/** StreamDepleted: Can't perform the action on a depleted stream! */
export const SABLIER_LOCKUP_ERROR__STREAM_DEPLETED = 0x1770; // 6000
/** StreamCanceled: Can't renounce an already-renounced Stream! */
export const SABLIER_LOCKUP_ERROR__STREAM_CANCELED = 0x1771; // 6001
/** StreamIsNotCancelable: Can't cancel a non-cancelable Stream! */
export const SABLIER_LOCKUP_ERROR__STREAM_IS_NOT_CANCELABLE = 0x1772; // 6002
/** StreamSettled: Can't cancel a settled Stream! */
export const SABLIER_LOCKUP_ERROR__STREAM_SETTLED = 0x1773; // 6003
/** CantCollectZeroFees: Can't collect zero fees! */
export const SABLIER_LOCKUP_ERROR__CANT_COLLECT_ZERO_FEES = 0x1774; // 6004
/** CliffTimeNotLessThanEndTime: Invalid cliff time of the Stream! */
export const SABLIER_LOCKUP_ERROR__CLIFF_TIME_NOT_LESS_THAN_END_TIME = 0x1775; // 6005
/** CliffTimeZeroUnlockAmountNotZero: Cliff time zero but unlock amount not zero! */
export const SABLIER_LOCKUP_ERROR__CLIFF_TIME_ZERO_UNLOCK_AMOUNT_NOT_ZERO = 0x1776; // 6006
/** DepositAmountZero: Invalid deposit amount! */
export const SABLIER_LOCKUP_ERROR__DEPOSIT_AMOUNT_ZERO = 0x1777; // 6007
/** StartTimeNotLessThanCliffTime: Start time must be less than cliff time! */
export const SABLIER_LOCKUP_ERROR__START_TIME_NOT_LESS_THAN_CLIFF_TIME = 0x1778; // 6008
/** StartTimeNotLessThanEndTime: Start time must be less than end time! */
export const SABLIER_LOCKUP_ERROR__START_TIME_NOT_LESS_THAN_END_TIME = 0x1779; // 6009
/** StartTimeZero: Start time can't be zero! */
export const SABLIER_LOCKUP_ERROR__START_TIME_ZERO = 0x177a; // 6010
/** UnlockAmountsSumTooHigh: Unlock amounts sum is greater than deposit amount! */
export const SABLIER_LOCKUP_ERROR__UNLOCK_AMOUNTS_SUM_TOO_HIGH = 0x177b; // 6011
/** StreamAlreadyNonCancelable: Can't renounce a non-cancelable Stream! */
export const SABLIER_LOCKUP_ERROR__STREAM_ALREADY_NON_CANCELABLE = 0x177c; // 6012
/** Overdraw: Attempting to withdraw more than available in the stream! */
export const SABLIER_LOCKUP_ERROR__OVERDRAW = 0x177d; // 6013
/** WithdrawAmountZero: Can't withdraw a zero amount! */
export const SABLIER_LOCKUP_ERROR__WITHDRAW_AMOUNT_ZERO = 0x177e; // 6014

export type SablierLockupError =
  | typeof SABLIER_LOCKUP_ERROR__CANT_COLLECT_ZERO_FEES
  | typeof SABLIER_LOCKUP_ERROR__CLIFF_TIME_NOT_LESS_THAN_END_TIME
  | typeof SABLIER_LOCKUP_ERROR__CLIFF_TIME_ZERO_UNLOCK_AMOUNT_NOT_ZERO
  | typeof SABLIER_LOCKUP_ERROR__DEPOSIT_AMOUNT_ZERO
  | typeof SABLIER_LOCKUP_ERROR__OVERDRAW
  | typeof SABLIER_LOCKUP_ERROR__START_TIME_NOT_LESS_THAN_CLIFF_TIME
  | typeof SABLIER_LOCKUP_ERROR__START_TIME_NOT_LESS_THAN_END_TIME
  | typeof SABLIER_LOCKUP_ERROR__START_TIME_ZERO
  | typeof SABLIER_LOCKUP_ERROR__STREAM_ALREADY_NON_CANCELABLE
  | typeof SABLIER_LOCKUP_ERROR__STREAM_CANCELED
  | typeof SABLIER_LOCKUP_ERROR__STREAM_DEPLETED
  | typeof SABLIER_LOCKUP_ERROR__STREAM_IS_NOT_CANCELABLE
  | typeof SABLIER_LOCKUP_ERROR__STREAM_SETTLED
  | typeof SABLIER_LOCKUP_ERROR__UNLOCK_AMOUNTS_SUM_TOO_HIGH
  | typeof SABLIER_LOCKUP_ERROR__WITHDRAW_AMOUNT_ZERO;

let sablierLockupErrorMessages: Record<SablierLockupError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  sablierLockupErrorMessages = {
    [SABLIER_LOCKUP_ERROR__CANT_COLLECT_ZERO_FEES]: `Can't collect zero fees!`,
    [SABLIER_LOCKUP_ERROR__CLIFF_TIME_NOT_LESS_THAN_END_TIME]: `Invalid cliff time of the Stream!`,
    [SABLIER_LOCKUP_ERROR__CLIFF_TIME_ZERO_UNLOCK_AMOUNT_NOT_ZERO]: `Cliff time zero but unlock amount not zero!`,
    [SABLIER_LOCKUP_ERROR__DEPOSIT_AMOUNT_ZERO]: `Invalid deposit amount!`,
    [SABLIER_LOCKUP_ERROR__OVERDRAW]: `Attempting to withdraw more than available in the stream!`,
    [SABLIER_LOCKUP_ERROR__START_TIME_NOT_LESS_THAN_CLIFF_TIME]: `Start time must be less than cliff time!`,
    [SABLIER_LOCKUP_ERROR__START_TIME_NOT_LESS_THAN_END_TIME]: `Start time must be less than end time!`,
    [SABLIER_LOCKUP_ERROR__START_TIME_ZERO]: `Start time can't be zero!`,
    [SABLIER_LOCKUP_ERROR__STREAM_ALREADY_NON_CANCELABLE]: `Can't renounce a non-cancelable Stream!`,
    [SABLIER_LOCKUP_ERROR__STREAM_CANCELED]: `Can't renounce an already-renounced Stream!`,
    [SABLIER_LOCKUP_ERROR__STREAM_DEPLETED]: `Can't perform the action on a depleted stream!`,
    [SABLIER_LOCKUP_ERROR__STREAM_IS_NOT_CANCELABLE]: `Can't cancel a non-cancelable Stream!`,
    [SABLIER_LOCKUP_ERROR__STREAM_SETTLED]: `Can't cancel a settled Stream!`,
    [SABLIER_LOCKUP_ERROR__UNLOCK_AMOUNTS_SUM_TOO_HIGH]: `Unlock amounts sum is greater than deposit amount!`,
    [SABLIER_LOCKUP_ERROR__WITHDRAW_AMOUNT_ZERO]: `Can't withdraw a zero amount!`,
  };
}

export function getSablierLockupErrorMessage(code: SablierLockupError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (sablierLockupErrorMessages as Record<SablierLockupError, string>)[
      code
    ];
  }

  return 'Error message not available in production bundles.';
}

export function isSablierLockupError<
  TProgramErrorCode extends SablierLockupError,
>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    SABLIER_LOCKUP_PROGRAM_ADDRESS,
    code
  );
}
